.ProseMirror {
  padding: 1rem;
  border-radius: 0.5rem;
  border: 1px solid #e2e8f0;
  min-height: 150px;
  outline: none;
}

.ProseMirror > * + * {
  margin-top: 0.75em;
}

/* Basic list styles */
.ProseMirror ul,
.ProseMirror ol {
  padding: 0 1.2rem;
  margin: 0.5rem 0;
}

.ProseMirror ul {
  list-style-type: disc;
}

.ProseMirror ol {
  list-style-type: decimal;
}

.ProseMirror li {
  position: relative;
  margin: 0.2rem 0;
  padding: 0.2rem 0;
}

.ProseMirror li > p {
  margin: 0;
  min-height: 1.5em;
}

/* Task list styles */
.ProseMirror ul[data-type="taskList"] {
  list-style: none;
  padding: 0;
}

.ProseMirror ul[data-type="taskList"] p {
  margin: 0;
}

.ProseMirror ul[data-type="taskList"] li {
  display: flex;
  gap: 0.5rem;
  align-items: baseline;
  padding-left: 0.5rem;
}

.ProseMirror ul[data-type="taskList"] li > label {
  user-select: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

/* Custom checkbox styling */
.ProseMirror ul[data-type="taskList"] input[type="checkbox"] {
  -webkit-appearance: none;
  appearance: none;
  background-color: transparent;
  margin: 0;
  width: 16px;
  height: 16px;
  border: 1px solid #94a3b8;
  border-radius: 4px;
  cursor: pointer;
  display: grid;
  place-content: center;
}

.ProseMirror ul[data-type="taskList"] input[type="checkbox"]::before {
  content: "";
  width: 8px;
  height: 8px;
  transform: scale(0);
  transition: transform 0.1s ease-in-out;
  box-shadow: inset 1em 1em #3b82f6;
  transform-origin: center;
  clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
}

.ProseMirror ul[data-type="taskList"] input[type="checkbox"]:checked::before {
  transform: scale(1);
}

.ProseMirror ul[data-type="taskList"] input[type="checkbox"]:focus {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

.ProseMirror ul[data-type="taskList"] li > div {
  flex: 1;
  margin-top: 0.125rem;
}

.ProseMirror ul[data-type="taskList"] li[data-checked="true"] > div {
  color: #94a3b8;
  text-decoration: line-through;
  text-decoration-thickness: 2px;
}

/* Placeholder styles */
.ProseMirror p.is-editor-empty:first-child::before {
  color: #adb5bd;
  content: attr(data-placeholder);
  float: left;
  height: 0;
  pointer-events: none;
}

/* Ensure list markers are visible */
.ProseMirror ul li::marker,
.ProseMirror ol li::marker {
  color: #64748b;
}

/* List item styles */
.ProseMirror .list-item {
  position: relative;
  margin: 0.2rem 0;
  padding: 0.5rem;
  padding-left: 2.5rem;
  border-radius: 0.5rem;
  cursor: pointer;
  background-color: transparent;
  border: 2px solid transparent;
  transition: all 0.2s ease;
}

/* Active state */
.ProseMirror .list-item.is-active {
  background-color: rgba(59, 130, 246, 0.1);
  border-color: rgb(59, 130, 246);
}

/* Selected state */
.ProseMirror .list-item.is-selected {
  background-color: rgba(59, 130, 246, 0.2);
  border-color: rgb(59, 130, 246);
}

/* Drag handle */
.ProseMirror .list-item .drag-handle {
  position: absolute;
  left: 0.75rem;
  top: 50%;
  transform: translateY(-50%);
  font-size: 1.2rem;
  line-height: 1;
  color: #64748b;
  opacity: 0;
  transition: opacity 0.2s ease, color 0.2s ease;
  cursor: move;
  touch-action: none;
  -webkit-user-select: none;
  user-select: none;
  padding: 0.5rem 0.25rem;
  z-index: 10;
}

/* Show drag handle for active and selected items */
.ProseMirror .list-item.is-active .drag-handle,
.ProseMirror .list-item.is-selected .drag-handle,
.ProseMirror .list-item:hover .drag-handle {
  opacity: 1;
}

.ProseMirror .list-item.is-active .drag-handle,
.ProseMirror .list-item.is-selected .drag-handle {
  color: rgb(59, 130, 246);
}

/* Dragging styles */
.ProseMirror .list-item.is-dragging {
  opacity: 0.5;
  background-color: rgba(59, 130, 246, 0.1);
  cursor: move;
} 