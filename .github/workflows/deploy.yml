name: Deploy Application

on:
  push:
    branches:
      - main
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set deployment target
        id: set-target
        run: |
          if [ ${{ github.ref }} = 'refs/heads/main' ]; then
            echo "host=curate.fileopia.com" >> $GITHUB_OUTPUT
            echo "user=fileopia-curate" >> $GITHUB_OUTPUT
          else
            echo "host=curate-dev.fileopia.com" >> $GITHUB_OUTPUT
            echo "user=fileopia-curate-dev" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ steps.set-target.outputs.user }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Starting deployment..."
            
            cd ~/htdocs/${{ steps.set-target.outputs.host }}
            
            echo "Cleaning repository state..."
            git fetch origin ${{ github.ref_name }}
            git reset --hard origin/${{ github.ref_name }}
            
            echo "Setting up Node environment..."
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            
            echo "Stopping existing process..."
            pm2 stop ${{ steps.set-target.outputs.host }} || true
            pm2 delete ${{ steps.set-target.outputs.host }} || true
            pm2 delete ecosystem.config.current || true
            
            echo "Installing dependencies..."
            npm install
            
            echo "Building application..."
            npm run build
            
            echo "Starting application..."
            if [ ${{ github.ref }} = 'refs/heads/main' ]; then
              pm2 start "npm start -- -p 3000" --name "${{ steps.set-target.outputs.host }}"
            else
              pm2 start "npm start -- -p 3001" --name "${{ steps.set-target.outputs.host }}"
            fi
            
            # Save PM2 state to prevent warnings
            pm2 save
            
            echo "Checking deployment status..."
            sleep 5
            pm2 list
            pm2 logs ${{ steps.set-target.outputs.host }} --lines 20
            
            echo "Deployment complete!"

      - name: Verify deployment
        run: |
          echo "Waiting for application to start..."
          sleep 45
          curl -v https://${{ steps.set-target.outputs.host }} || exit 1
              