name: Deploy

on:
  push:
    branches: [ main, develop ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Set deployment target
      id: set-target
      run: |
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          echo "host=favely.net" >> $GITHUB_OUTPUT
          echo "user=favely" >> $GITHUB_OUTPUT
        else
          echo "host=curate-dev.fileopia.com" >> $GITHUB_OUTPUT
          echo "user=fileopia-curate-dev" >> $GITHUB_OUTPUT
        fi

    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ steps.set-target.outputs.user }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          # Load NVM
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          
          # Install Node 18 if not already installed
          nvm install 18
          nvm use 18
          
          # Create directory if it doesn't exist
          mkdir -p /home/${{ steps.set-target.outputs.user }}/htdocs/${{ steps.set-target.outputs.host }}
          cd /home/${{ steps.set-target.outputs.user }}/htdocs/${{ steps.set-target.outputs.host }}
          
          # Initialize git repository if it doesn't exist
          if [ ! -d .git ]; then
            git init
            git remote add origin https://github.com/zenopia/rankshare.git
          fi
          
          # Fetch and reset to the correct branch
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            git fetch origin main
            git reset --hard origin/main
          else
            git fetch origin develop
            git reset --hard origin/develop
          fi
          
          # Install global tools
          npm install -g pm2
          
          # Install and build
          npm install
          npm run build
          
          # Start/reload the application
          pm2 describe ${{ steps.set-target.outputs.host }} > /dev/null
          if [ $? -eq 0 ]; then
            # Application exists, reload it
            pm2 reload ecosystem.config.js --only ${{ steps.set-target.outputs.host }} --update-env
          else
            # Application doesn't exist, start it
            pm2 start ecosystem.config.js --only ${{ steps.set-target.outputs.host }}
          fi
              